{"version":3,"sources":["components/statistics.jsx","components/FeedbackOptions.jsx","components/section.jsx","components/notification.jsx","App.js","index.js","components/feedback.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","buttons","Object","keys","className","s","button__container","map","button","type","onClick","Section","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","onButton","name","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oRAgBeA,EAbI,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAMC,EAAyB,EAAzBA,mBAC7C,OAAW,gCAEE,uCAAWJ,KACX,0CAAcC,KACb,sCAASC,KACT,uCAAUC,EAAV,OACA,mDAAsBC,EAAqB,EAAGA,EAAqB,EAAnE,Y,gBCQDC,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC1BC,EAAUC,OAAOC,KAAKJ,GAC9B,OAAO,qBAAKK,UAAWC,IAAEC,kBAAlB,SACJL,EAAQM,KAAI,SAAAC,GAAM,OACjB,wBAASJ,UAAWC,IAAEG,OAAQC,KAAK,SAASC,QAAS,WAAQV,EAAgBQ,IAA7E,SACDA,GAD+FA,SCCrFG,EAPC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACrB,OAAQ,oCACJ,6BAAKD,IACJC,MCGMC,EALM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OACI,4BAAIA,KCyCGC,G,kNApCbC,MAAQ,CACRxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLuB,mBAAqB,kBAAM,EAAKD,MAAMxB,KAAO,EAAKwB,MAAMvB,QAAU,EAAKuB,MAAMtB,K,EAC7EwB,gCAAkC,kBAAMC,KAAKC,MAAM,EAAKJ,MAAMxB,KAAO,EAAKyB,qBAAuB,M,EAEjGI,SAAW,SAACC,GACV,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,4CAM9B,WAEE,IAAM3B,EAAQ8B,KAAKR,qBACbrB,EAAqB6B,KAAKP,kCAEhC,OACE,qCACE,cAAC,EAAD,CAASP,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBb,QAAS2B,KAAKT,MAAOjB,gBAAiB0B,KAAKJ,aAE9D,cAAC,EAAD,CAASV,MAAM,YAAf,SAA4BhB,EAAQ,EAAI,cAAC,EAAD,CAAYH,KAAMiC,KAAKT,MAAMxB,KAAMC,QAASgC,KAAKT,MAAMvB,QAASC,IAAK+B,KAAKT,MAAMtB,IAAKC,MAAOA,EAAOC,mBAAoBA,IAC/J,cAAC,EAAD,CAAckB,QAAQ,+B,GA7BZY,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,OAAS,4B","file":"static/js/main.d2845526.chunk.js","sourcesContent":["\r\n\r\n\r\nconst Statistics = ({good, neutral, bad, total,positivePercentage }) => {\r\n  return  (  <div>\r\n\r\n               <p>Good: { good}</p>\r\n               <p>Neutral: { neutral}</p>\r\n                <p>Bad: {bad}</p>\r\n                <p>Total:{total} </p>\r\n                <p>Positive Feedback:{positivePercentage > 0? positivePercentage : 0} %</p>\r\n           </div>)  \r\n  \r\n   }     \r\n\r\n  \r\nexport default Statistics;\r\n","import s from './feedback.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    const buttons = Object.keys(options);\r\n  return <div className={s.button__container}>\r\n    {buttons.map(button => (\r\n      < button className={s.button} type=\"button\" onClick={() => { onLeaveFeedback(button) } } key={button}>\r\n    {button}\r\n  </button>))\r\n  \r\n}\r\n  \r\n  </div>\r\n}\r\n\r\n\r\n\r\n  \r\nexport default FeedbackOptions;","const Section = ({title, children}) => {\r\n    return (<section>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>)\r\n}\r\n\r\nexport default Section;","\r\nconst Notification = ({message}) => {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\nexport default Notification;","import { Component } from 'react';\nimport Statistics from './components/statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/section'; \nimport Notification from './components/notification';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  }\n  \n  countTotalFeedback = () => this.state.good + this.state.neutral + this.state.bad;\n  countPositiveFeedbackPercentage = () => Math.round(this.state.good / this.countTotalFeedback() * 100);\n  \n  onButton = (name) => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }))\n  }\n\n\n\n  render() {\n    \n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.state} onLeaveFeedback={this.onButton} />\n        </Section>\n        <Section title=\"Statistic\">{total > 0 ? <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={total} positivePercentage={positivePercentage} /> :\n        <Notification message=\"No feedback given\"/>}\n        \n       </Section>\n    </>\n  );}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedback_button__1QCh5\"};"],"sourceRoot":""}